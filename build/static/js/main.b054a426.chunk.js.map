{"version":3,"sources":["Clusters.jsx","Leaflet.jsx","index.js"],"names":["markerClusters","L","markerClusterGroup","customIcon","Icon","iconUrl","iconSize","MarkerCluster","markers","addMarkers","map","useLeaflet","useEffect","clearLayers","forEach","feature","geometry","coordinates","lng","lat","console","log","marker","LatLng","icon","addTo","addLayer","on","start","window","performance","now","markersToAdd","markerToAdd","bindPopup","properties","popupContent","undefined","push","addLayers","end","position","mapStyle","height","Leaflet","geojsonFeatureCollection","features","Map","center","zoom","style","maxZoom","TileLayer","url","attribution","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"45+JAOMA,EAAiBC,IAAEC,qBACnBC,EAAa,IAAIF,IAAEG,KAAK,CAC5BC,QAAS,8DACTC,SAAU,CAAC,GAAI,MAoEFC,EAjEO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACxBC,EAAQC,cAARD,IA6DR,OAzDEE,qBAAU,WACVZ,EAAea,cACfL,EAAQM,SAAQ,SAACC,GACb,kBAAiBA,EAAQC,SAASC,YAAlC,GAAKC,EAAL,KAAUC,EAAV,KAEF,OADEC,QAAQC,IAAI,MAAMF,EAAI,OAAOD,GACxBjB,IAAEqB,OAAO,IAAIrB,IAAEsB,OAAOJ,EAAKD,GAAM,CACtCM,KAAMrB,IACLsB,MAAMzB,EACV,IAYDU,EAAIgB,SAAS1B,EACd,GAAE,CAACQ,EAASE,IAEbA,EAAIiB,GAAG,WAAW,WAChB,IAAMC,EAAQC,OAAOC,YAAYC,MAEjCtB,IACA,IAAMuB,EAAe,GACrBhC,EAAea,cAadL,EAAQM,SAAQ,SAACC,GACb,kBAAiBA,EAAQC,SAASC,YAAlC,GAAKC,EAAL,KAAUC,EAAV,KACGc,EAAchC,IAAEqB,OAAO,IAAIrB,IAAEsB,OAAOJ,EAAKD,GAAM,CACnDM,KAAMrB,IACL+B,UAAUnB,EAAQoB,WAAWC,mBAEZC,IAAhBJ,GACFD,EAAaM,KAAKL,EAErB,IAEDjC,EAAeuC,UAAUP,GACzB,IAAMQ,EAAMX,OAAOC,YAAYC,MAC/BX,QAAQC,IAAR,+CAAoDmB,EAAMZ,EAA1D,MACD,IAEM,IACR,E,eCvEKa,EAAW,CAAC,YAAa,YAEzBC,EAAW,CAAEC,OAAQ,QA2CZC,EAzCC,WACd,IAAIpC,EAEEC,EAAU,iDAAG,oGAIjBD,EAAU,GAJO,cAaGqC,EAAyBC,UAb5B,IAajB,2BAAS/B,EAA8C,sBAClCA,EAAQC,SAASC,YADiB,aAErDT,EAAQ8B,KAAKvB,EAfE,0EAAH,qDAsBhB,OAFAN,IAGE,qCACE,eAACsC,EAAA,EAAD,CAAKC,OAAQP,EAAUQ,KA9BhB,EA8B4BC,MAAOR,EAAUS,QAAS,GAA7D,UACE,cAACC,EAAA,EAAD,CACEC,IAAI,0CACJC,YAAY,2EAEd,cAAC,EAAD,CAAe9C,QAASA,EAASC,WAAYA,OAE/C,6GAKL,ECzCK8C,EAAM,kBAAM,cAAC,EAAD,GAAN,EAENC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,E","file":"static/js/main.b054a426.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet.markercluster/dist/leaflet.markercluster\";\nimport \"leaflet.markercluster/dist/MarkerCluster.css\";\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\nimport { useLeaflet } from \"react-leaflet\";\n\nconst markerClusters = L.markerClusterGroup();\nconst customIcon = new L.Icon({\n  iconUrl: \"https://unpkg.com/leaflet@1.5.1/dist/images/marker-icon.png\",\n  iconSize: [25, 41]\n});\n\nconst MarkerCluster = ({ markers, addMarkers }) => {\n  const { map } = useLeaflet();\n\n\n  \n    useEffect(() => {\n    markerClusters.clearLayers();\n    markers.forEach((feature) => {\n        let [lng, lat] = feature.geometry.coordinates;\n        console.log('lat',lat,'long',lng);\n      return L.marker(new L.LatLng(lat, lng), {\n        icon: customIcon\n      }).addTo(markerClusters)\n    });\n    /*\n    markers.forEach(({ position }) => {\n        let {lat, lng}=position;\n        console.log('lat',lat,'long',lng);\n      return L.marker(new L.LatLng(lat, lng), {\n        icon: customIcon\n      }).addTo(markerClusters)\n    });\n    */\n    \n    \n    map.addLayer(markerClusters);\n  }, [markers, map]);\n\n  map.on(\"moveend\", () => {\n    const start = window.performance.now();\n\n    addMarkers();\n    const markersToAdd = [];\n    markerClusters.clearLayers();\n    /*\n    markers.forEach(({ position }) => {\n      const markerToAdd = L.marker(new L.LatLng(position.lat, position.lng), {\n        icon: customIcon\n      }).bindPopup(\n          `<strong>I'm a beautiful pop-up</strong>`);\n\n      if (markerToAdd !== undefined) {\n        markersToAdd.push(markerToAdd);\n      }\n    });\n    */\n     markers.forEach((feature) => {\n         let [lng, lat] = feature.geometry.coordinates;\n      const markerToAdd = L.marker(new L.LatLng(lat, lng), {\n        icon: customIcon\n      }).bindPopup(feature.properties.popupContent);\n\n      if (markerToAdd !== undefined) {\n        markersToAdd.push(markerToAdd);\n      }\n    });\n    \n    markerClusters.addLayers(markersToAdd);\n    const end = window.performance.now();\n    console.log(`Time of adding markers and clusters: ${end - start}ms`);\n  });\n\n  return null;\n};\n\nexport default MarkerCluster;\n","import React from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport MarkerCluster from \"./Clusters\";\nimport geojsonFeatureCollection from \"./repair-services.json\";\n\nconst position = [46.0953589, -73.1733771];\nconst zoom = 5;\nconst mapStyle = { height: \"90vh\" };\n\nconst Leaflet = () => {\n  let markers;\n\n  const addMarkers = async () => {\n    //let response = await fetch(\"/data/trivial.json\");\n    //let geojsonFeatureCollection1 = await response.json();\n\n    markers = [];\n    /*\n    for (let feature of geojsonFeatureCollection.features) {\n        let [lng, lat] = feature.geometry.coordinates;\n      markers.push({\n        position: {lng,lat}\n      })\n    }\n    */\n    for (let feature of geojsonFeatureCollection.features) {\n        let [lng, lat] = feature.geometry.coordinates;\n      markers.push(feature)\n    }\n    \n  };\n\n  addMarkers();\n\n  return (\n    <>\n      <Map center={position} zoom={zoom} style={mapStyle} maxZoom={20}>\n        <TileLayer\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <MarkerCluster markers={markers} addMarkers={addMarkers} />\n      </Map>\n      <div>\n        clearLayers and addLayers used. Look at the console to check performance\n      </div>\n    </>\n  );\n};\n\nexport default Leaflet;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"./styles.css\";\nimport Leaflet from \"./Leaflet\";\n\nconst App = () => <Leaflet />;\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}