{"version":3,"sources":["Clusters.jsx","Leaflet.jsx","index.js"],"names":["markerClusters","L","markerClusterGroup","customIcon","Icon","iconUrl","iconSize","MarkerCluster","markers","addMarkers","map","useLeaflet","useEffect","clearLayers","forEach","position","marker","LatLng","lat","lng","icon","addTo","addLayer","on","start","window","performance","now","markersToAdd","markerToAdd","undefined","push","addLayers","end","console","log","mapStyle","height","Leaflet","fetch","response","i","Math","random","Map","center","zoom","style","maxZoom","TileLayer","url","attribution","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qWAOMA,EAAiBC,IAAEC,qBACnBC,EAAa,IAAIF,IAAEG,KAAK,CAC5BC,QAAS,8DACTC,SAAU,CAAC,GAAI,MAyCFC,EAtCO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACxBC,EAAQC,cAARD,IAkCR,OAhCAE,qBAAU,WACRZ,EAAea,cACfL,EAAQM,SAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACdd,IAAEe,OAAO,IAAIf,IAAEgB,OAAOF,EAASG,IAAKH,EAASI,KAAM,CACjDC,KAAMjB,IACLkB,MAAMrB,EAHK,IAMhBU,EAAIY,SAAStB,EACd,GAAE,CAACQ,EAASE,IAEbA,EAAIa,GAAG,WAAW,WAChB,IAAMC,EAAQC,OAAOC,YAAYC,MAEjClB,IACA,IAAMmB,EAAe,GACrB5B,EAAea,cACfL,EAAQM,SAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACXc,EAAc5B,IAAEe,OAAO,IAAIf,IAAEgB,OAAOF,EAASG,IAAKH,EAASI,KAAM,CACrEC,KAAMjB,SAGY2B,IAAhBD,GACFD,EAAaG,KAAKF,EAErB,IAED7B,EAAegC,UAAUJ,GACzB,IAAMK,EAAMR,OAAOC,YAAYC,MAC/BO,QAAQC,IAAR,+CAAoDF,EAAMT,EAA1D,MACD,IAEM,IACR,E,OC7CKT,EAAW,CAAC,QAAS,KACrBqB,EAAW,CAAEC,OAAQ,QAuCZC,EArCE,WACf,IAAI9B,EAEEC,EAAU,iDAAI,gHACG8B,MAAM,wBADT,OAMlB,IALIC,EADc,OAGlBN,QAAQC,IAAIK,GAEZhC,EAAU,GACDiC,EAAI,EAAGA,EAAI,IAAOA,IACzBjC,EAAQuB,KAAK,CACXhB,SAAU,CACRI,IAAmC,IAAhBuB,KAAKC,SAAlB,WACNzB,IAAK,WAAa,GAAqB,GAAhBwB,KAAKC,YAVhB,2CAAJ,qDAkBhB,OAFAlC,IAGE,qCACE,eAACmC,EAAA,EAAD,CAAKC,OAAQ9B,EAAU+B,KAAM,EAAGC,MAAOX,EAAUY,QAAS,GAA1D,UACE,cAACC,EAAA,EAAD,CACEC,IAAI,0CACJC,YAAY,2EAEd,cAAC,EAAD,CAAe3C,QAASA,EAASC,WAAYA,OAE/C,6GAKL,ECnCK2C,EAAM,kBAAM,cAAC,EAAD,GAAN,EAENC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,E","file":"static/js/main.755130ae.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet.markercluster/dist/leaflet.markercluster\";\nimport \"leaflet.markercluster/dist/MarkerCluster.css\";\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\nimport { useLeaflet } from \"react-leaflet\";\n\nconst markerClusters = L.markerClusterGroup();\nconst customIcon = new L.Icon({\n  iconUrl: \"https://unpkg.com/leaflet@1.5.1/dist/images/marker-icon.png\",\n  iconSize: [25, 41]\n});\n\nconst MarkerCluster = ({ markers, addMarkers }) => {\n  const { map } = useLeaflet();\n\n  useEffect(() => {\n    markerClusters.clearLayers();\n    markers.forEach(({ position }) =>\n      L.marker(new L.LatLng(position.lat, position.lng), {\n        icon: customIcon\n      }).addTo(markerClusters)\n    );\n\n    map.addLayer(markerClusters);\n  }, [markers, map]);\n\n  map.on(\"moveend\", () => {\n    const start = window.performance.now();\n\n    addMarkers();\n    const markersToAdd = [];\n    markerClusters.clearLayers();\n    markers.forEach(({ position }) => {\n      const markerToAdd = L.marker(new L.LatLng(position.lat, position.lng), {\n        icon: customIcon\n      });\n\n      if (markerToAdd !== undefined) {\n        markersToAdd.push(markerToAdd);\n      }\n    });\n\n    markerClusters.addLayers(markersToAdd);\n    const end = window.performance.now();\n    console.log(`Time of adding markers and clusters: ${end - start}ms`);\n  });\n\n  return null;\n};\n\nexport default MarkerCluster;\n","import React from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport MarkerCluster from \"./Clusters\";\n\nconst position = [51.505, -0.09];\nconst mapStyle = { height: \"90vh\" };\n\nconst Leaflet =  () => {\n  let markers;\n\n  const addMarkers =  async () => {\n    let response = await fetch(\"../data/trivial.json\");\n    //let geojsonFeatureCollection = await response.json();\n    console.log(response);\n\n    markers = [];\n    for (let i = 0; i < 10000; i++) {\n      markers.push({\n        position: {\n          lng: -122.673447 + Math.random() * 200.0,\n          lat: 45.5225581 - 60 + Math.random() * 80\n        }\n      });\n    }\n  };\n\n  addMarkers();\n\n  return (\n    <>\n      <Map center={position} zoom={2} style={mapStyle} maxZoom={20}>\n        <TileLayer\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <MarkerCluster markers={markers} addMarkers={addMarkers} />\n      </Map>\n      <div>\n        clearLayers and addLayers used. Look at the console to check performance\n      </div>\n    </>\n  );\n};\n\nexport default Leaflet;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"./styles.css\";\nimport Leaflet from \"./Leaflet\";\n\nconst App = () => <Leaflet />;\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}